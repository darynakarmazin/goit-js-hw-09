{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IAzCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAQC,OAAOH,EAAII,cAAcf,MAAMgB,OACrCC,EAAON,EAAII,cAAcE,KAAKD,MAC9BE,EAASP,EAAII,cAAcG,OAAOF,MAE/BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAI/BrB,EAHeqB,EAAI,EACNN,EAAQI,EAAOE,GAGzBC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGjD0B,OAAM,SAAAL,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,EAAA1B,GAAS2B,OAAOI,QACd,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAKnDW,EAAII,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  let delay = Number(evt.currentTarget.delay.value);\n  const step = evt.currentTarget.step.value;\n  const amount = evt.currentTarget.amount.value;\n\n  for (let i = 0; i < amount; i++) {\n    let position = i + 1;\n    let delays = delay + step * i;\n\n    createPromise(position, delays)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","currentTarget","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.313dea11.js.map"}